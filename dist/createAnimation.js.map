{"version":3,"sources":["../createAnimation.js"],"names":["createAnimation","compareNumbers","a","b","notNull","value","parsePosition","parsed","parseFloat","isNaN","cache","definition","cacheKey","JSON","stringify","positions","Object","keys","map","filter","sort","length","Error","compiled","easing","style","i","position","keyframe","from","to","forEach","key","inputRange","outputRange","push"],"mappings":"yEAyBwBA,e,CAzBxB,4C,4IAEA,QAASC,eAAT,CAAwBC,CAAxB,CAA2BC,CAA3B,CAA8B,CAC5B,MAAOD,GAAIC,CAAX,CACD,CAED,QAASC,QAAT,CAAiBC,KAAjB,CAAwB,CACtB,MAAOA,SAAU,IAAjB,CACD,CAED,QAASC,cAAT,CAAuBD,KAAvB,CAA8B,CAC5B,GAAIA,QAAU,MAAd,CAAsB,CACpB,MAAO,EAAP,CACD,CAFD,IAEO,IAAIA,QAAU,IAAd,CAAoB,CACzB,MAAO,EAAP,CACD,CACD,GAAME,QAASC,WAAWH,KAAX,CAAkB,EAAlB,CAAf,CACA,GAAII,MAAMF,MAAN,GAAiBA,OAAS,CAA1B,EAA+BA,OAAS,CAA5C,CAA+C,CAC7C,MAAO,KAAP,CACD,CACD,MAAOA,OAAP,CACD,CAED,GAAMG,OAAQ,EAAd,CAEe,QAASV,gBAAT,CAAyBW,UAAzB,CAAqC,CAClD,GAAMC,UAAWC,KAAKC,SAAL,CAAeH,UAAf,CAAjB,CACA,GAAID,MAAME,QAAN,CAAJ,CAAqB,CACnB,MAAOF,OAAME,QAAN,CAAP,CACD,CAED,GAAMG,WAAYC,OAAOC,IAAP,CAAYN,UAAZ,EACfO,GADe,CACXZ,aADW,EAEfa,MAFe,CAERf,OAFQ,CAAlB,CAGAW,UAAUK,IAAV,CAAenB,cAAf,EAEA,GAAIc,UAAUM,MAAV,CAAmB,CAAvB,CAA0B,CACxB,KAAM,IAAIC,MAAJ,CAAU,sDAAV,CAAN,CACD,CAED,GAAMC,UAAW,EAAjB,CACA,GAAIZ,WAAWa,MAAf,CAAuB,CACrBD,SAASC,MAAT,CAAkBb,WAAWa,MAA7B,CACD,CACD,GAAIb,WAAWc,KAAf,CAAsB,CACpBF,SAASE,KAAT,CAAiBd,WAAWc,KAA5B,CACD,CArBiD,yBAuBzCC,CAvByC,EAwBhD,GAAMC,UAAWZ,UAAUW,CAAV,CAAjB,CACA,GAAIE,UAAWjB,WAAWgB,QAAX,CAAf,CACA,GAAI,CAACC,QAAL,CAAe,CACb,GAAID,WAAa,CAAjB,CAAoB,CAClBC,SAAWjB,WAAWkB,IAAtB,CACD,CAFD,IAEO,IAAIF,WAAa,CAAjB,CAAoB,CACzBC,SAAWjB,WAAWmB,EAAtB,CACD,CACF,CACD,GAAI,CAACF,QAAL,CAAe,CACb,KAAM,IAAIN,MAAJ,CAAU,oDAAV,CAAN,CACD,CAEDM,SAAW,2BAAaA,QAAb,CAAX,CACAZ,OAAOC,IAAP,CAAYW,QAAZ,EAAsBG,OAAtB,CAA8B,aAAO,CACnC,GAAI,EAAEC,MAAOT,SAAT,CAAJ,CAAwB,CACtBA,SAASS,GAAT,EAAgB,CACdC,WAAY,EADE,CAEdC,YAAa,EAFC,CAAhB,CAID,CACDX,SAASS,GAAT,EAAcC,UAAd,CAAyBE,IAAzB,CAA8BR,QAA9B,EACAJ,SAASS,GAAT,EAAcE,WAAd,CAA0BC,IAA1B,CAA+BP,SAASI,GAAT,CAA/B,EACD,CATD,EAtCgD,EAuBlD,IAAK,GAAIN,GAAI,CAAb,CAAgBA,EAAIX,UAAUM,MAA9B,CAAsCK,GAAK,CAA3C,CAA8C,OAArCA,CAAqC,EAyB7C,CAEDhB,MAAME,QAAN,EAAkBW,QAAlB,CAEA,MAAOA,SAAP,CACD","file":"createAnimation.js","sourcesContent":["import flattenStyle from './flattenStyle';\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction notNull(value) {\n  return value !== null;\n}\n\nfunction parsePosition(value) {\n  if (value === 'from') {\n    return 0;\n  } else if (value === 'to') {\n    return 1;\n  }\n  const parsed = parseFloat(value, 10);\n  if (isNaN(parsed) || parsed < 0 || parsed > 1) {\n    return null;\n  }\n  return parsed;\n}\n\nconst cache = {};\n\nexport default function createAnimation(definition) {\n  const cacheKey = JSON.stringify(definition);\n  if (cache[cacheKey]) {\n    return cache[cacheKey];\n  }\n\n  const positions = Object.keys(definition)\n    .map(parsePosition)\n    .filter(notNull);\n  positions.sort(compareNumbers);\n\n  if (positions.length < 2) {\n    throw new Error('Animation definitions must have at least two values.');\n  }\n\n  const compiled = {};\n  if (definition.easing) {\n    compiled.easing = definition.easing;\n  }\n  if (definition.style) {\n    compiled.style = definition.style;\n  }\n\n  for (let i = 0; i < positions.length; i += 1) {\n    const position = positions[i];\n    let keyframe = definition[position];\n    if (!keyframe) {\n      if (position === 0) {\n        keyframe = definition.from;\n      } else if (position === 1) {\n        keyframe = definition.to;\n      }\n    }\n    if (!keyframe) {\n      throw new Error('Missing animation keyframe, this should not happen');\n    }\n\n    keyframe = flattenStyle(keyframe);\n    Object.keys(keyframe).forEach(key => {\n      if (!(key in compiled)) {\n        compiled[key] = {\n          inputRange: [],\n          outputRange: [],\n        };\n      }\n      compiled[key].inputRange.push(position);\n      compiled[key].outputRange.push(keyframe[key]);\n    });\n  }\n\n  cache[cacheKey] = compiled;\n\n  return compiled;\n}\n"]}