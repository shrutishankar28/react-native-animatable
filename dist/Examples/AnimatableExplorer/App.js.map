{"version":3,"sources":["../../../Examples/AnimatableExplorer/App.js"],"names":["AnimatableSectionList","SectionList","COLORS","NATIVE_INCOMPATIBLE_ANIMATIONS","styles","StyleSheet","create","container","flex","backgroundColor","title","fontSize","fontWeight","textAlign","margin","instructions","color","marginBottom","slider","height","toggle","width","borderRadius","padding","alignSelf","toggledOn","transform","rotate","translateY","sectionHeader","sectionHeaderText","ExampleView","state","duration","textRef","handleTextRef","ref","handleDurationChange","setState","Math","round","handleRowPressed","componentRef","animationType","setNativeProps","style","zIndex","animate","then","item","GROUPED_ANIMATION_TYPES","section","index","length","indexOf","Component"],"mappings":"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","file":"App.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  SafeAreaView,\n  SectionList,\n  Slider,\n  StyleSheet,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { createAnimatableComponent, View, Text } from 'react-native-animatable';\nimport AnimationCell from './AnimationCell';\nimport GROUPED_ANIMATION_TYPES from './grouped-animation-types.json';\n\nconst AnimatableSectionList = createAnimatableComponent(SectionList);\n\nconst COLORS = [\n  '#65b237', // green\n  '#346ca5', // blue\n  '#a0a0a0', // light grey\n  '#ffc508', // yellow\n  '#217983', // cobolt\n  '#435056', // grey\n  '#b23751', // red\n  '#333333', // dark\n  '#ff6821', // orange\n  '#e3a09e', // pink\n  '#1abc9c', // turquoise\n  '#302614', // brown\n];\n\nconst NATIVE_INCOMPATIBLE_ANIMATIONS = ['jello', 'lightSpeedIn', 'lightSpeedOut'];\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: '300',\n    textAlign: 'center',\n    margin: 20,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 20,\n    backgroundColor: 'transparent',\n  },\n  slider: {\n    height: 30,\n    margin: 10,\n  },\n  toggle: {\n    width: 120,\n    backgroundColor: '#333',\n    borderRadius: 3,\n    padding: 5,\n    fontSize: 14,\n    alignSelf: 'center',\n    textAlign: 'center',\n    margin: 10,\n    color: 'rgba(255, 255, 255, 1)',\n  },\n  toggledOn: {\n    color: 'rgba(255, 33, 33, 1)',\n    fontSize: 16,\n    transform: [\n      {\n        rotate: '8deg',\n      },\n      {\n        translateY: -20,\n      },\n    ],\n  },\n  sectionHeader: {\n    backgroundColor: '#F5FCFF',\n    padding: 15,\n  },\n  sectionHeaderText: {\n    textAlign: 'center',\n    fontSize: 18,\n  },\n});\n\nexport default class ExampleView extends Component {\n  state = {\n    duration: 1000,\n    toggledOn: false,\n  };\n\n  textRef = null;\n  handleTextRef = ref => {\n    this.textRef = ref;\n  };\n\n  handleDurationChange = duration => {\n    this.setState({ duration: Math.round(duration) });\n  };\n\n  handleRowPressed = (componentRef, animationType) => {\n    componentRef.setNativeProps({\n      style: {\n        zIndex: 1,\n      },\n    });\n    componentRef.animate(animationType, this.state.duration).then(() => {\n      componentRef.setNativeProps({\n        style: {\n          zIndex: 0,\n        },\n      });\n    });\n    if (this.textRef) {\n      this.textRef[animationType](this.state.duration);\n    }\n  };\n\n  render() {\n    const { duration, toggledOn } = this.state;\n    return (\n      <View animation=\"fadeIn\" style={styles.container} useNativeDriver>\n        <SafeAreaView>\n          <Text ref={this.handleTextRef} style={styles.title}>\n            Animatable Explorer\n          </Text>\n        </SafeAreaView>\n\n        <View animation=\"tada\" delay={3000}>\n          <Slider\n            style={styles.slider}\n            value={1000}\n            onValueChange={this.handleDurationChange}\n            maximumValue={2000}\n          />\n        </View>\n        <TouchableWithoutFeedback onPress={() => this.setState({ toggledOn: !toggledOn })}>\n          <Text\n            style={[styles.toggle, toggledOn && styles.toggledOn]}\n            transition={['color', 'rotate', 'fontSize']}\n          >\n            Toggle me!\n          </Text>\n        </TouchableWithoutFeedback>\n        <Text animation=\"zoomInDown\" delay={700} style={styles.instructions}>\n          Tap one of the following to animate for {duration} ms\n        </Text>\n        <AnimatableSectionList\n          animation=\"bounceInUp\"\n          contentInsetAdjustmentBehavior=\"automatic\"\n          duration={1100}\n          delay={1400}\n          keyExtractor={item => item}\n          sections={GROUPED_ANIMATION_TYPES}\n          removeClippedSubviews={false}\n          renderSectionHeader={({ section }) => (\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionHeaderText}>{section.title}</Text>\n            </View>\n          )}\n          renderItem={({ item, index }) => (\n            <AnimationCell\n              animationType={item}\n              color={COLORS[index % COLORS.length]}\n              onPress={this.handleRowPressed}\n              useNativeDriver={NATIVE_INCOMPATIBLE_ANIMATIONS.indexOf(item) === -1}\n            />\n          )}\n        />\n      </View>\n    );\n  }\n}\n"]}