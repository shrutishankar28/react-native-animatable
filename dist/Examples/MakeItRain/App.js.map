{"version":3,"sources":["../../../Examples/MakeItRain/App.js"],"names":["Animatable","MONEY_DIMENSIONS","width","height","SCREEN_DIMENSIONS","Dimensions","get","WIGGLE_ROOM","FlippingImage","back","delay","duration","source","style","from","rotateX","rotate","to","backfaceVisibility","Swinging","amplitude","rotation","children","translateX","translateY","Falling","Math","pow","t","ErlichBachman","erlich","flex","randomize","random","max","range","array","i","count","push","MakeItRain","map","flipDelay","position","paddingHorizontal","left","moneyFront","moneyBack"],"mappings":"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","file":"App.js","sourcesContent":["import React from 'react';\nimport { Dimensions, ImageBackground } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport erlich from './assets/erlich.png';\nimport moneyFront from './assets/money-front.png';\nimport moneyBack from './assets/money-back.png';\n\nconst MONEY_DIMENSIONS = { width: 49, height: 26 };\nconst SCREEN_DIMENSIONS = Dimensions.get('window');\nconst WIGGLE_ROOM = 50;\n\nconst FlippingImage = ({ back = false, delay, duration = 1000, source, style = {} }) => (\n  <Animatable.Image\n    animation={{\n      from: { rotateX: back ? '0deg' : '180deg', rotate: !back ? '180deg' : '0deg' },\n      to: { rotateX: back ? '360deg' : '-180deg', rotate: !back ? '180deg' : '0deg' },\n    }}\n    duration={duration}\n    delay={delay}\n    easing=\"linear\"\n    iterationCount=\"infinite\"\n    useNativeDriver\n    source={source}\n    style={{\n      ...style,\n      backfaceVisibility: 'hidden',\n    }}\n  />\n);\n\nconst Swinging = ({ amplitude, rotation = 7, delay, duration = 700, children }) => (\n  <Animatable.View\n    animation={{\n      0: {\n        translateX: -amplitude,\n        translateY: -amplitude * 0.8,\n        rotate: `${rotation}deg`,\n      },\n      0.5: {\n        translateX: 0,\n        translateY: 0,\n        rotate: '0deg',\n      },\n      1: {\n        translateX: amplitude,\n        translateY: -amplitude * 0.8,\n        rotate: `${-rotation}deg`,\n      },\n    }}\n    delay={delay}\n    duration={duration}\n    direction=\"alternate\"\n    easing=\"ease-in-out\"\n    iterationCount=\"infinite\"\n    useNativeDriver\n  >\n    {children}\n  </Animatable.View>\n);\n\nconst Falling = ({ duration, delay, style, children }) => (\n  <Animatable.View\n    animation={{\n      from: { translateY: -MONEY_DIMENSIONS.height - WIGGLE_ROOM },\n      to: { translateY: SCREEN_DIMENSIONS.height + WIGGLE_ROOM },\n    }}\n    duration={duration}\n    delay={delay}\n    easing={t => Math.pow(t, 1.7)}\n    iterationCount=\"infinite\"\n    useNativeDriver\n    style={style}\n  >\n    {children}\n  </Animatable.View>\n);\n\nconst ErlichBachman = ({ children }) => (\n  <ImageBackground source={erlich} style={{ flex: 1 }}>\n    {children}\n  </ImageBackground>\n);\n\nconst randomize = max => Math.random() * max;\n\nconst range = count => {\n  const array = [];\n  for (let i = 0; i < count; i++) {\n    array.push(i);\n  }\n  return array;\n};\n\nconst MakeItRain = ({ count = 15, duration = 3000 }) => (\n  <ErlichBachman>\n    {range(count)\n      .map(i => randomize(1000))\n      .map((flipDelay, i) => (\n        <Falling\n          key={i}\n          duration={duration}\n          delay={i * (duration / count)}\n          style={{\n            position: 'absolute',\n            paddingHorizontal: WIGGLE_ROOM,\n            left: randomize(SCREEN_DIMENSIONS.width - MONEY_DIMENSIONS.width) - WIGGLE_ROOM,\n          }}\n        >\n          <Swinging amplitude={MONEY_DIMENSIONS.width / 5} delay={randomize(duration)}>\n            <FlippingImage source={moneyFront} delay={flipDelay} />\n            <FlippingImage\n              source={moneyBack}\n              delay={flipDelay}\n              back\n              style={{ position: 'absolute' }}\n            />\n          </Swinging>\n        </Falling>\n      ))}\n  </ErlichBachman>\n);\n\nexport default MakeItRain;\n"]}